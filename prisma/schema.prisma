// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "../ERD.pdf"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model LeetCodeQuestion {
  id                   String              @id @default(auto()) @map("_id") @db.ObjectId
  topic                String              @unique
  description          String
  link                 String
  difficulty           String?
  LeetCodeDifficulty   LeetCodeDifficulty? @relation(fields: [leetCodeDifficultyId], references: [id])
  leetCodeDifficultyId String?             @db.ObjectId
  TopicType            TopicType?          @relation(fields: [topicTypeId], references: [id])
  topicTypeId          String?             @db.ObjectId
}

model LeetCodeDifficulty {
  id               String             @id @default(auto()) @map("_id") @db.ObjectId
  difficulty       String             @unique
  questions        LeetCodeQuestion[]
  chineseCharacter String?
}

model TopicType {
  id        String             @id @default(auto()) @map("_id") @db.ObjectId
  name      String             @unique
  questions LeetCodeQuestion[]
}

model Book {
  id                   String              @id @default(auto()) @map("_id") @db.ObjectId
  name                 String              @unique
  author               String
  image                String?
  description          String
  link                 String
  classification       String
  BookClassification   BookClassification? @relation(fields: [bookClassificationId], references: [id])
  bookClassificationId String?             @db.ObjectId
}

model BookClassification {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String @unique
  description String
  books       Book[]
}

model Project {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  name          String       @unique
  description   String
  link          String
  image         String
  ProjectType   ProjectType? @relation(fields: [projectTypeId], references: [id])
  projectTypeId String?      @db.ObjectId
}

model ProjectType {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  description String
  image       String
  projects    Project[]
}

model WebSite {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  name          String       @unique
  description   String
  link          String
  image         String
  WebSiteType   WebSiteType? @relation(fields: [webSiteTypeId], references: [id])
  webSiteTypeId String?      @db.ObjectId
}

model WebSiteType {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  description String
  image       String
  websites    WebSite[]
}

model Article {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String @unique
  link  String
}
